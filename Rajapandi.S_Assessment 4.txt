1. * In Interface class we can achieve Multiple Inheritance, but in abstract class we can't achieve Multiple Inheritance.

   * Interfaces cannot have constructors. Abstract classes can have constructors.

2. Constructors are special methods in C# that are automatically called , when an object of a class is created to initialize all the class data members.

3. * The virtual keyword is used to modify a method, property, indexer, or event declared in the base class and allow it to be overridden in the derived          class.

   * The override keyword is used to extend or modify a virtual/abstract method, property, indexer, or event of base class into a derived class.

4. When a class is declared sealed, it cannot be inherited, abstract classes cannot be declared sealed.

5. using System;
public class Celsius
{
    double celsius = Convert.ToDouble(Console.ReadLine());
    public void Kelvin()
    {
        double kelvin;
        kelvin = celsius + 273;
         Console.WriteLine(kelvin);
    }
    public void Fahrenheit()
    {
        double fahrenheit= celsius*18/10+32;
         Console.WriteLine(fahrenheit);
    }
}
public class HelloWorld
{
    public static void Main(string[] args)
    {
        Console.WriteLine("Enter celsius value");
        Celsius c1=new Celsius();
        c1.Kelvin();
        c1.Fahrenheit();
    }
}